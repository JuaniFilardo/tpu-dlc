/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modulo_indexacion;
import modulo_indexacion.GestorIndexacion;
import java.io.File;
import java.io.FileNotFoundException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import modulo_indexacion.Libro;
import modulo_indexacion.Libro;
import modulo_indexacion.Palabra;
import modulo_indexacion.Palabra;
import modulo_indexacion.Parser;
import modulo_indexacion.Parser;


/**
 *
 * @author Agus
 */
public class InterfazCargadoDeLibros extends javax.swing.JFrame {

    /**
     * Creates new form InterfazCargadoDeLibros
     */
    public InterfazCargadoDeLibros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textRuta = new javax.swing.JTextField();
        botonCargarDirectorio = new javax.swing.JButton();
        botonProcesarDirectorio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaCargados = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        textRutaBD = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botonCargarBD = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        textRuta.setEditable(false);
        textRuta.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        textRuta.setText("Seleccione un directorio");

        botonCargarDirectorio.setText("+");
        botonCargarDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarDirectorioActionPerformed(evt);
            }
        });

        botonProcesarDirectorio.setText("PROCESAR");
        botonProcesarDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonProcesarDirectorioActionPerformed(evt);
            }
        });

        jLabel1.setText("Directorio a procesar:");

        areaCargados.setColumns(20);
        areaCargados.setRows(5);
        jScrollPane1.setViewportView(areaCargados);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Procesador de textos por directorio");

        textRutaBD.setEditable(false);
        textRutaBD.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        textRutaBD.setText("Seleccione un directorio");
        textRutaBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textRutaBDActionPerformed(evt);
            }
        });

        jLabel3.setText("Directorio de la base de datos");

        botonCargarBD.setText("+");
        botonCargarBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarBDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonProcesarDirectorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(textRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonCargarDirectorio))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(textRutaBD, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonCargarBD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCargarDirectorio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textRutaBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCargarBD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botonProcesarDirectorio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private File directorio;
    private void botonCargarDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarDirectorioActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showDialog(this, "Seleccionar directorio");
        try{
            directorio = chooser.getSelectedFile();
            this.textRuta.setText(directorio.getPath());
        }
        catch(Exception e){
            this.textRuta.setText("Ninguna ruta cargada");
        }
    }//GEN-LAST:event_botonCargarDirectorioActionPerformed

    private void botonProcesarDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonProcesarDirectorioActionPerformed
        // TODO add your handling code here:
        //Comprueba si hay una ruta cargada, listo los archivos del directorio y los mando a procesar.
        if(directorio != null && !rutaDB.equals("")){
            File[] lista = directorio.listFiles();
            ArrayList<File> archivos = new ArrayList<>();
            for (File archivo : lista) {
                String nombre = archivo.getName();
                if (nombre.endsWith(".txt")){  
                    archivos.add(archivo);
                }
            }
            //Cuando creo el gestor, se carga la base de datos en un arbol.
            GestorIndexacion gestor = new GestorIndexacion();
            //Cargo libro por libro en el for
            int i = 1;
            if (archivos.size() > 0) {
                for (File archivo : archivos) {
                //Creo un libro y parser del libro y parseo
                Libro l = new Libro(archivo.getName(), archivo.getAbsolutePath());
                Parser p = new Parser(l);
                String[] s; 
                s = p.parsearArchivo(); //el deprecado
                
                
                ArrayList<Palabra> ls = new ArrayList();
                for (int j = 0; j < s.length; j++) {
                    if (s[j] == null) {
                        break;
                    }
                    Palabra pal = new Palabra(s[j]);
                    ls.add(pal);
                }
                gestor.insertarPalabras(l, ls, rutaDB);
                System.out.println("Libro cargado");
                this.areaCargados.setText(areaCargados.getText()+"\n Se cargÃ³ correctamente el libro numero: " + i + ", '" + archivo.getName() + "'");
                i++;
            }
                try {
                   
                    gestor.updateFrecuencias(rutaDB);
                } catch (SQLException ex) {
                    Logger.getLogger(InterfazCargadoDeLibros.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Se procesaron correctamente los archivos del directorio");
            
        }
            else JOptionPane.showMessageDialog(this, "El directorio a procesar debe contener algÃºn archivo de texto!");
        }
        else JOptionPane.showMessageDialog(this, "Debe seleccionar un directorio valido!");
            
    }//GEN-LAST:event_botonProcesarDirectorioActionPerformed

    private void textRutaBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRutaBDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRutaBDActionPerformed
     private String rutaDB = "";
    private void botonCargarBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarBDActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showDialog(this, "Seleccionar Base de Datos");
        File bd;
        try{
            bd = chooser.getSelectedFile();
            if (bd.getName().endsWith(".bd")) {
                rutaDB = bd.getAbsolutePath();
                this.textRutaBD.setText(rutaDB);
            }
        }
        catch(Exception e){
        }
    }//GEN-LAST:event_botonCargarBDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazCargadoDeLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazCargadoDeLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazCargadoDeLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazCargadoDeLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazCargadoDeLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaCargados;
    private javax.swing.JButton botonCargarBD;
    private javax.swing.JButton botonCargarDirectorio;
    private javax.swing.JButton botonProcesarDirectorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textRuta;
    private javax.swing.JTextField textRutaBD;
    // End of variables declaration//GEN-END:variables

}

